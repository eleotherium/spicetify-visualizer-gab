"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.build = void 0;
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const util_1 = require("util");
const buildCustomApp_1 = __importDefault(require("./buildCustomApp"));
const buildExtension_1 = __importDefault(require("./buildExtension"));
const esbuild_plugin_external_global_1 = require("esbuild-plugin-external-global");
const postCssPlugin = require("esbuild-plugin-postcss2");
const autoprefixer = require("autoprefixer");
const exec = (0, util_1.promisify)(require('child_process').exec);
const build = async (watch, minify, outDirectory, inDirectory) => {
    if (!inDirectory)
        inDirectory = './src';
    const settings = JSON.parse(fs_1.default.readFileSync(`${inDirectory}/settings.json`, 'utf-8'));
    const isExtension = !Object.keys(settings).includes("icon");
    const id = settings.nameId.replace(/\-/g, 'D');
    if (isExtension) {
        console.log("Extension detected");
    }
    else {
        console.log("Custom App detected");
    }
    if (!outDirectory) {
        const spicetifyDirectory = await exec("spicetify -c").then((o) => path_1.default.dirname(o.stdout.trim()));
        if (isExtension) {
            outDirectory = path_1.default.join(spicetifyDirectory, "Extensions");
        }
        else {
            outDirectory = path_1.default.join(spicetifyDirectory, "CustomApps", settings.nameId);
        }
    }
    // Create outDirectory if it doesn't exists
    if (!fs_1.default.existsSync(outDirectory)) {
        fs_1.default.mkdirSync(outDirectory, { recursive: true });
    }
    const esbuildOptions = {
        platform: 'browser',
        external: ['react', 'react-dom'],
        bundle: true,
        globalName: id,
        plugins: [
            postCssPlugin.default({
                plugins: [autoprefixer],
                modules: {
                    generateScopedName: `[name]__[local]___[hash:base64:5]_${id}`
                },
            }),
            (0, esbuild_plugin_external_global_1.externalGlobalPlugin)({
                'react': 'Spicetify.React',
                'react-dom': 'Spicetify.ReactDOM',
            })
        ],
    };
    if (isExtension) {
        (0, buildExtension_1.default)(settings, outDirectory, watch, esbuildOptions, minify, inDirectory);
    }
    else {
        (0, buildCustomApp_1.default)(settings, outDirectory, watch, esbuildOptions, minify, inDirectory);
    }
    if (watch) {
        console.log('Watching...');
    }
};
exports.build = build;
